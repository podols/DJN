<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	

<mapper namespace="packgMapper">
	
	<!-- 패키지 리스트 SELECT-->
	<resultMap id="packgValues" type="packgVo">		
	<!-- 패키지 테이블 (시작) -->
		<result property="packgSeq" column="packg_seq"/> 
		<result property="packgType" column="packg_type"/>
		<result property="packgNme" column="packg_nme"/>
		<result property="packgCnt" column="packg_cnt"/>
		<result property="allPric" column="all_pric"/>
		<result property="packgDisplayCheck" column="packg_display_check"/>	
	<!-- 패키지 테이블 (종료) -->
	<!-- 패키지 검색 조건 (시작) -->
		<result property="packgSechText" column="packgSechText"/>
		<result property="packgSechType" column="packgSechType"/>	
	<!-- 패키지 검색 조건 (끝) -->
	<!-- 상품 추가 테이블 검색어 -->
		<result property="prodctSechText" column="prodctSechText"/>	
		<result property="tempSechText" column="tempSechText"/>		
	<!-- 상품 추가 테이블 검색어(끝) -->
	<!-- 거래처(시작) -->
		<result property="clintSeq" column="clint_seq"/>
		<result property="clintNme" column="clint_nme"/>
		<result property="clintRepresntatv" column="clint_represntatv"/>
		<result property="clintNum" column="clint_num"/>
		<result property="clintFax" column="clint_fax"/>
		<result property="clintMangr" column="clint_mangr"/>
		<result property="clintMangrNum" column="clint_mangr_num"/>
		<result property="prodctSeq" column="prodct_seq"/>
		<result property="prodctNme" column="prodct_nme"/>
		<result property="purchsPric" column="purchs_pric"/>
		<result property="selPric" column="sel_pric"/>
		<result property="qunt" column="qunt"/>	
		<result property="mainImg" column="main_img"/>
	<!-- 거래처 (끝) -->
	</resultMap>
	
	<!-- 패키지의 카테고리 리스트 SELECT-->
<!-- 	<resultMap id="catgrValues" type="catgrVo">		 -->
	<!-- 패키지의 카테고리 리스트 (시작) -->
<!-- 		<result property="id" column="catgr_seq"/>  -->
<!-- 		<result property="parent" column="rot_catgr_seq"/> -->
<!-- 		<result property="text" column="catgr_nme"/> -->
<!-- 		<result property="icon" column="catgr_icon"/> -->
	<!-- 패키지의 카테고리 리스트 (종료) -->
<!-- 	</resultMap> -->
	
	<!-- 패키지 목록 조회(검색) -->
	<select id="selectPackgList" parameterType="packgVo" resultMap="packgValues">
		SELECT p.packg_seq
			,  p.packg_type
			,  c.clint_nme
			,  p.packg_nme
			,  sum(pr.sel_pric) 'all_pric'
			,  packg_display_check
		FROM packg_tb p JOIN packg_bridg_tb pb
		ON p.packg_seq = pb.packg_seq
		JOIN prodct_tb pr
		ON pb.prodct_seq = pr.prodct_seq		 
		JOIN clint_tb c
		ON p.clint_seq = c.clint_seq	
		<choose>
		    <when test="packgType == 'clint'">
		        AND p.packg_type = '거래처'
		    </when>
		    <when test="packgType == 'normal'">
		        AND p.packg_type != '거래처'
		    </when>
		</choose>
		<choose>
			<when test="packgSechType == 'clint'">
			    <choose>
			        <when test="packgSechText == null || packgSechText == ''"></when>
			        <otherwise>AND c.clint_nme LIKE '%${packgSechText}%'</otherwise>
			    </choose>
			</when>
			<when test="packgSechType == 'packg'">
			    AND p.packg_nme LIKE '%${packgSechText}%'
			</when>
		</choose>
		<if test="packgDisplayCheck != 'all'">		    
			AND packg_display_check = '${packgDisplayCheck}'
		</if>
		GROUP BY p.packg_seq
		ORDER BY p.packg_seq;
	</select>
	
	<!-- 패키지 목록 전체 페이지 수 -->
	<select id="selectPackgCount" parameterType="packgVo" resultType="int">
		SELECT COUNT(DISTINCT p.packg_seq)
		FROM packg_tb p JOIN packg_bridg_tb pb
		ON p.packg_seq = pb.packg_seq
		JOIN clint_tb c
		ON p.clint_seq = c.clint_seq
		JOIN prodct_tb pr
		ON pb.prodct_seq = pr.prodct_seq
		<choose>
			<when test="packgSechType == 'clint'">
			    <choose>
			        <when test="packgSechText == null || packgSechText == ''"></when>
			        <otherwise>AND c.clint_nme LIKE '%${packgSechText}%'</otherwise>
			    </choose>
			</when>
			<when test="packgSechType == 'packg'">
			    AND p.packg_nme LIKE '%${packgSechText}%'
			</when>
		</choose>
		<if test="packgDisplayCheck != 'all'">		    
			AND packg_display_check = '${packgDisplayCheck}'
		</if>
		ORDER BY p.packg_seq;
	</select>
	
	<!-- 패키지 추가 -->
	<insert id="insertPackg" parameterType="packgVo">
		<selectKey keyProperty="packgSeq" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(packg_seq),0)+1
			FROM packg_tb;
		</selectKey>
		INSERT INTO packg_tb(packg_seq, packg_type, packg_nme, packg_cnt, clint_seq)
		VALUES(#{packgSeq}, #{packgType}, #{packgNme}, #{packgCnt}, #{clintSeq});
	</insert>
	
	<!-- 패키지 상품 추가 -->
	<insert id="insertPackgProdct" parameterType="packgVo">
	    <selectKey keyProperty="packgSeq" resultType="int" order="BEFORE">
			SELECT MAX(packg_seq)
			FROM packg_tb;
		</selectKey>
	    INSERT INTO packg_bridg_tb(packg_seq, clint_seq, prodct_seq)
	    VALUES (#{packgSeq}
	    	, ifnull((SELECT clint_seq
	    			FROM prodct_tb p 
	    			LEFT OUTER JOIN clint_bridg_tb cb
	    			ON p.prodct_seq = cb.prodct_seq
	    			WHERE p.prodct_seq = #{prodctSeq}),0)
	    	, #{prodctSeq});
	</insert>
	
	<!-- 패키지 진열여부수정 -->
	<update id="updatePackgDisplayCheck" parameterType="int">
		UPDATE packg_tb
		SET packg_display_check =
			CASE (SELECT packg_display_check FROM (SELECT * FROM packg_tb) as t WHERE packg_seq = #{packgSeq})
				WHEN 'Y' THEN 'N'
				ELSE 'Y'
		    END
		WHERE packg_seq = #{packgSeq};
	</update>
	
	<!-- 패키지 삭제 -->
	<delete id="deletePackg" parameterType="int">	
		DELETE FROM Packg_tb
		WHERE packg_seq = #{packgSeq};
	</delete>
	
	<!-- 패키지 수정 -->
	<update id="updatePackg" parameterType="packgVo">
	    UPDATE packg_tb 
	    SET packg_nme=#{packgNme}
	    	, packg_cnt=#{packgCnt}
	    WHERE packg_seq = #{packgSeq};
	</update>
	
	<!-- 패키지 브릿지 테이블 삭제 -->
	<delete id="deletePackgBridg" parameterType="int">
	    DELETE FROM packg_bridg_tb
	    WHERE packg_seq = #{packgSeq};
	</delete>
	
	<!-- 패키지 수정 상품 추가 -->
	<insert id="insertUpdatePackgProdct" parameterType="packgVo">
	    INSERT INTO packg_bridg_tb(packg_seq, clint_seq, prodct_seq)
	    VALUES (#{packgSeq}
	    	, ifnull((SELECT clint_seq
	    			FROM prodct_tb p 
	    			LEFT OUTER JOIN clint_bridg_tb cb
	    			ON p.prodct_seq = cb.prodct_seq
	    			WHERE p.prodct_seq = #{prodctSeq}),0)
	    	, #{prodctSeq});
	</insert>
	
	<!-- 상품 테이블 전체 페이지 수 -->
	<select id="selectPackgAdListCount" parameterType="packgVo" resultType="int">
		SELECT COUNT(*)
		FROM prodct_tb p JOIN catgr_tb c1
		ON p.catgr_seq = c1.catgr_seq
		JOIN catgr_tb c2
		ON c1.rot_catgr_seq = c2.catgr_seq
		JOIN catgr_tb c3
		ON c2.rot_catgr_seq = c3.catgr_seq
		JOIN stck_tb s
		ON p.prodct_seq = s.prodct_seq
		WHERE p.prodct_seq not in (SELECT prodct_seq FROM Packg_fod_tb)
		AND p.prodct_nme LIKE '%${prodctSechText}%'
		<if test="catgrSeq != 0">
		AND (c3.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})	
		OR c2.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})
		OR c1.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq}))
		</if>
		AND qunt > 0
		AND disply_check = 'Y'
		ORDER BY p.prodct_nme;
	</select>
	
	<!-- 패키지 상세 조회 -->
	<select id="selectPackgRead" parameterType="int" resultMap="packgValues">
		SELECT p.packg_seq
			 , packg_type
			 , packg_nme
			 , packg_cnt
			 , p.clint_seq
			 , packg_display_check
			 , clint_nme
			 , clint_represntatv
			 , clint_num
			 , clint_fax
			 , clint_mangr
			 , clint_mangr_num
             , sum(sel_pric) as 'allPric'
		FROM packg_tb p JOIN clint_tb c
		ON p.clint_seq = c.clint_seq
        JOIN packg_bridg_tb pb
		ON p.packg_seq = pb.packg_seq
        JOIN prodct_tb pr
        ON pr.prodct_seq = pb.prodct_seq
		WHERE p.packg_seq = #{packgSeq};
	</select>
	
	<!-- 패키지 상세 조회 상품 리스트 -->
	<select id="selectPackgProdctRead" parameterType="int" resultMap="packgValues">
	    SELECT pb.prodct_seq, prodct_nme, purchs_pric, sel_pric, qunt
		FROM prodct_tb p JOIN packg_bridg_tb pb
		ON p.prodct_seq = pb.prodct_seq
		JOIN stck_tb s
		ON p.prodct_seq = s.prodct_seq
		WHERE packg_seq = #{packgSeq}
		ORDER BY prodct_nme;
	</select>
	
	<!-- 패키지 상세 조회 상품 선택 리스트 -->
	<select id="selectPackgProdctReadAdList" parameterType="packgVo" resultMap="packgValues">
	    SELECT p.prodct_seq, prodct_nme, qunt, sel_pric
		FROM prodct_tb p JOIN catgr_tb c1
		ON p.catgr_seq = c1.catgr_seq
		JOIN catgr_tb c2
		ON c1.rot_catgr_seq = c2.catgr_seq
		JOIN catgr_tb c3
		ON c2.rot_catgr_seq = c3.catgr_seq 
		JOIN stck_tb s
		ON p.prodct_seq = s.prodct_seq
		WHERE p.prodct_seq not in (SELECT prodct_seq FROM prodct_packg_tb) 
		AND p.prodct_seq not in (SELECT prodct_seq FROM packg_bridg_tb WHERE packg_seq = #{packgSeq})
		<if test="catgrSeq != 0">
		AND (c3.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})	
		OR c2.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})
		OR c1.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq}))
		</if>
		AND qunt > 0 
		AND disply_check = 'Y'
		AND p.prodct_nme LIKE '%${prodctSechText}%'
		ORDER BY prodct_nme
		LIMIT #{recordCountPerPage} OFFSET #{firstRecordIndex};
	</select>
	
	<!-- 패키지 상세 조회 상품 선택 리스트 전체 페이지 수 -->
	<select id="selectPackgProdctReadAdCount" parameterType="packgVo" resultType="int">
		SELECT COUNT(*)
		FROM prodct_tb p JOIN catgr_tb c1
		ON p.catgr_seq = c1.catgr_seq
		JOIN catgr_tb c2
		ON c1.rot_catgr_seq = c2.catgr_seq
		JOIN catgr_tb c3
		ON c2.rot_catgr_seq = c3.catgr_seq
		JOIN stck_tb s
		ON p.prodct_seq = s.prodct_seq
		WHERE p.prodct_seq not in (SELECT prodct_seq FROM prodct_packg_tb)  
		AND p.prodct_seq not in (SELECT prodct_seq FROM packg_bridg_tb WHERE packg_seq = #{packgSeq})
		<if test="catgrSeq != 0">
		AND (c3.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})	
		OR c2.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})
		OR c1.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq}))
		</if>
		AND qunt > 0 
		AND disply_check = 'Y'
		AND p.prodct_nme LIKE '%${prodctSechText}%'
		ORDER BY prodct_nme;
	</select>	
	
	<!-- 패키지 상세조회 상품 추가 임시 테이블 처음 추가 -->
	<insert id="insertPackgProdctReadTempList" parameterType="int">	    
		INSERT INTO prodct_packg_tb(prodct_seq)
		SELECT pb.prodct_seq
		FROM prodct_tb p JOIN packg_bridg_tb pb
		ON p.prodct_seq = pb.prodct_seq
		JOIN stck_tb s
		ON p.prodct_seq = s.prodct_seq
		WHERE packg_seq = #{packgSeq}
		ORDER BY prodct_nme;
	</insert>
	
	<!-- 패키지 등록 관련 -->
	
	<!-- 거래처의 상품리스트 조회 -->
	<select id="selectClintProdctList" parameterType="int" resultMap="packgValues">
	    SELECT c.clint_seq
	    	,  p.prodct_seq
	    	,  prodct_nme
	    	,  purchs_pric
	    	,  sel_pric
	    	,  qunt
		FROM clint_bridg_tb cb
		LEFT JOIN clint_tb c ON c.clint_seq = cb.clint_seq
		LEFT JOIN prodct_tb p ON cb.prodct_seq = p.prodct_seq
		LEFT JOIN stck_tb s ON s.prodct_seq = p.prodct_seq
		WHERE c.clint_seq = #{clintSeq}
		ORDER BY prodct_nme;
	</select>
	
	<!-- 패키지 등록 상품선택 리스트 -->
	<select id="selectPackgProdctAdList" resultMap="packgValues">
	    SELECT p.prodct_seq, prodct_nme, qunt, sel_pric
		FROM prodct_tb p JOIN catgr_tb c1
		ON p.catgr_seq = c1.catgr_seq
		JOIN catgr_tb c2
		ON c1.rot_catgr_seq = c2.catgr_seq
		JOIN catgr_tb c3
		ON c2.rot_catgr_seq = c3.catgr_seq 
		JOIN clint_bridg_tb cb
		ON p.prodct_seq = cb.prodct_seq
		JOIN stck_tb s
		ON p.prodct_seq = s.prodct_seq
		WHERE p.prodct_seq not in (SELECT prodct_seq FROM prodct_packg_tb) 
		<if test="catgrSeq != 0">
		AND (c3.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})	
		OR c2.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})
		OR c1.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq}))
		</if>
		AND p.prodct_type = 0
		AND qunt > 0 
		AND disply_check = 'Y'
		AND p.prodct_nme LIKE '%${prodctSechText}%'
		<if test="clintSeq != 0">
			AND cb.clint_seq != #{clintSeq}
		</if>
		ORDER BY prodct_nme
		LIMIT #{recordCountPerPage} OFFSET #{firstRecordIndex};
	</select> 
	
	<!-- 상품 테이블 전체 페이지 수 -->
	<select id="selectPackgProdctAdCount" parameterType="packgVo" resultType="int">
		SELECT COUNT(*)
		FROM prodct_tb p JOIN catgr_tb c1
		ON p.catgr_seq = c1.catgr_seq
		JOIN catgr_tb c2
		ON c1.rot_catgr_seq = c2.catgr_seq
		JOIN catgr_tb c3
		ON c2.rot_catgr_seq = c3.catgr_seq 
		JOIN clint_bridg_tb cb
		ON p.prodct_seq = cb.prodct_seq
		JOIN stck_tb s
		ON p.prodct_seq = s.prodct_seq
		WHERE p.prodct_seq not in (SELECT prodct_seq FROM prodct_packg_tb) 
		<if test="catgrSeq != 0">
		AND (c3.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})	
		OR c2.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq})
		OR c1.catgr_seq = (SELECT catgr_seq FROM catgr_tb WHERE catgr_seq = #{catgrSeq}))
		</if>
		AND p.prodct_type = 0
		AND qunt > 0 
		AND disply_check = 'Y'
		AND p.prodct_nme LIKE '%${prodctSechText}%'
		<if test="clintSeq != 0">
			AND cb.clint_seq != #{clintSeq}
		</if>
		ORDER BY prodct_nme;
	</select>
	
	<!-- 패키지 등록 임시테이블 리스트 -->
	<select id="selectPackgProdctAdTempList" resultMap="packgValues">
	    SELECT pp.prodct_seq, prodct_nme, sel_pric, qunt
		FROM prodct_tb p JOIN prodct_packg_tb pp
		ON p.prodct_seq = pp.prodct_seq
		JOIN stck_tb s
		ON pp.prodct_seq = s.prodct_seq
        WHERE prodct_nme LIKE '%${tempSechText}%'
        ORDER BY prodct_nme
		LIMIT #{recordCountPerPage} OFFSET #{firstRecordIndex}
	</select>
	
	<!-- 패키지 임시 테이블 전체 페이지 수 -->
	<select id="selectPackgProdctAdTempCount" parameterType="packgVo" resultType="int">
		SELECT COUNT(*)
        FROM prodct_tb p JOIN prodct_packg_tb pp
        ON p.prodct_seq = pp.prodct_seq
        JOIN stck_tb s
        ON p.prodct_seq = s.prodct_seq
        WHERE p.prodct_nme LIKE '%${tempSechText}%'
	</select>
	
	<!-- 메인 진열 상품의 상품 추가 임시 테이블 처음 추가 -->
	<insert id="insertPackgProdctTempList" parameterType="int">	    
		INSERT INTO prodct_packg_tb(prodct_seq)
		SELECT p.prodct_seq
		FROM clint_tb c JOIN clint_bridg_tb cb
		ON c.clint_seq = cb.clint_seq
		JOIN prodct_tb p
		ON cb.prodct_seq = p.prodct_seq
		JOIN stck_tb s
		ON p.prodct_seq = s.prodct_seq
		WHERE c.clint_seq = #{clintSeq}
		ORDER BY prodct_nme;
	</insert>
	
	<!-- 패키지 상품 추가 임시 테이블 추가 -->
	<insert id="insertPackgProdctAdTempList" parameterType="int">	    
		INSERT INTO prodct_packg_tb(prodct_seq)
		VALUES(#{prodctSeq})
	</insert>
	
	<!-- 패키지 상품 추가 임시 테이블 선택 삭제 -->
	<delete id="deletePackgProdctAdTempList" parameterType="int">
        DELETE FROM prodct_packg_tb
        WHERE prodct_seq = #{prodctSeq};
	</delete>
	
	<!-- 패키지 상품 추가 임시 테이블 전체삭제 -->
	<delete id="deletePackgProdctTempList">
        DELETE FROM prodct_packg_tb;
	</delete>
	
	<!-- 패키지 등록 임시테이블 최종 리스트 -->
	<select id="selectPackgProdctAdTempList2" resultMap="packgValues">
	    SELECT pp.prodct_seq, prodct_nme, purchs_pric, sel_pric, qunt
		FROM prodct_tb p JOIN prodct_packg_tb pp
		ON p.prodct_seq = pp.prodct_seq
		JOIN stck_tb s
		ON pp.prodct_seq = s.prodct_seq
        ORDER BY prodct_nme
	</select>
	
	<!-- 패키지 등록 후 상품 타입 업데이트 -->
	<update id="updateInsertPackgProdctType" parameterType="long">
	    UPDATE prodct_tb
	    SET prodct_type = 1
	    WHERE prodct_seq = #{prodctSeq};
	</update>
	
	<!-- 패키지  삭제 후 상품 타입 업데이트 -->
	<update id="updateDeletePackgProdctType" parameterType="long">
	    UPDATE prodct_tb
	    SET prodct_type = 0
	    WHERE prodct_seq in (SELECT prodct_seq
	    					 FROM packg_bridg_tb
	    					 WHERE packg_seq = #{packgSeq}); 
	</update>
</mapper>
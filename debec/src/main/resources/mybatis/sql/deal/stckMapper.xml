<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
   <!-- 
   * 재고 관리에 대한 쿼리가 정리된 Mapper 입니다.
   * 
   * history :
   *        하원식, 1.0, 2016/08/09 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/09  - 초기 작성
   * see : 관련된 모듈을 기술한다.
   //-->
<mapper namespace="stckMapper">

   <resultMap id="stckValues" type="stckVo">
      
      <!-- 상품 -->
      <result property="prodctSeq" column="prodct_seq"/>
      <result property="prodctNme" column="prodct_nme"/>
      <result property="purchsPric" column="purchs_pric"/>
      <result property="prodctMainImage" column="main_img"/>
      
      <!-- 거래처  -->
      <result property="clintSeq" column="clint_Seq"/>
      <result property="clintNme" column="clint_Nme"/>
      <result property="clintMangrNum" column="clint_mangr_num"/>
      
      <!-- 카테고리  -->
      <result property="topCatgrNme" column="top_catgr_Nme"/>
      <result property="midCatgrNme" column="mid_catgr_Nme"/>
      <result property="botCatgrNme" column="bot_catgr_Nme"/>
      <result property="catgrNme" column="catgrNme"/>
      <result property="selectedBotCatgrNme" column="selectedBotCatgrNme"/>
      
      <!-- 검색 조건 -->
      <result property="clintSechText" column="clintSechText"/>
      <result property="qunt" column="qunt"/>
      <result property="firstQunt" column="firstQunt"/>
      <result property="secondQunt" column="secondQunt"/>
      
      <!-- 입고 내역 추가 컬럼  -->
      <result property="totlPric" column="totl_pric"/>
      <result property="dat" column="dat"/>
      
      <!-- 전체 상품 개수 -->
      <result property="prodctCount" column="prodctCount"/>
      
      <!-- FLAG -->
      <result property="stckType" column="stckType"/>
   </resultMap>
   <!--  
   * 주석 양식입니다.
   * 
   * history :
   *        작성자, 1.0, 2001/09/15 – 초기 작성
   * author : 최종수정자
   * version : 1.1, 2001/09/23  - Javascript 함수 추가
   * see : 관련 모듈
   //-->
   
   <!-- 
   * 상품들의 재고 정보를 조회해주는 SELECT
   * 
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->
   <select id="stckList" parameterType="stckVo" resultMap="stckValues">
      SELECT  p.prodct_seq
         ,   p.prodct_nme
         ,   p.purchs_pric
         ,   p.main_img
         ,   s.qunt
           ,   cl.clint_nme
           ,   cl.clint_mangr_num
      FROM   prodct_tb p
      JOIN   catgr_tb c 
      ON      p.catgr_seq = c.catgr_seq
      JOIN   stck_tb s
      ON      s.prodct_Seq = p.prodct_Seq 
      JOIN 	catgr_tb c1 #소
      ON 		p.catgr_seq = c1.catgr_seq 
      JOIN 	catgr_tb c2 #중
      ON 		c1.ROT_catgr_seq = c2.catgr_seq 
      JOIN 	catgr_tb c3 #대
      ON 		c2.ROT_catgr_seq = c3.catgr_seq
      JOIN   clint_bridg_tb clb
      ON      clb.prodct_seq = p.prodct_Seq
            ,   clint_tb cl
      WHERE    cl.clint_seq = clb.clint_seq
	  <if test="selectedTopCatgrNme!='대분류' and selectedTopCatgrNme neq '전체'">
	  AND c3.catgr_nme = '${selectedTopCatgrNme}' 
	  </if>
	  <if test="selectedMidCatgrNme!='중분류' and selectedMidCatgrNme neq '전체'">
	  AND c2.catgr_nme = '${selectedMidCatgrNme}' 
	  </if>
	  <if test="selectedBotCatgrNme!='소분류' and selectedBotCatgrNme neq '전체'">
	  AND c1.catgr_nme = '${selectedBotCatgrNme}'  
      </if>
      <if test="secondQunt  >=  firstQunt and secondQunt!=0">
      AND s.qunt between ${firstQunt} and ${secondQunt} 
      </if>
      <if test="prodctSechText">
      AND p.prodct_nme LIKE CONCAT ('%', #{prodctSechText},'%')
      </if>
      <if test="prodctSeq!=0">
      AND p.prodct_Seq = #{prodctSeq}
      </if>
      ORDER BY p.prodct_seq DESC
      LIMIT #{recordCountPerPage} OFFSET #{firstRecordIndex};
   </select>
   
   
   <!-- 
   * 상품들의 재고 정보의 숫자를 조회해주는 SELECT
   * 
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->
   <select id="stckCount" parameterType="stckVo" resultType="int">
      SELECT    count(p.prodct_seq) prodctCount
      FROM   prodct_tb p
      JOIN   catgr_tb c 
      ON      p.catgr_seq = c.catgr_seq
      JOIN   stck_tb s
      ON      s.prodct_Seq = p.prodct_Seq
      JOIN   clint_bridg_tb clb
      ON      clb.prodct_seq = p.prodct_Seq
      JOIN 	catgr_tb c1 #소
      ON 		p.catgr_seq = c1.catgr_seq 
      JOIN 	catgr_tb c2 #중
      ON 		c1.ROT_catgr_seq = c2.catgr_seq 
      JOIN 	catgr_tb c3 #대
      ON 		c2.ROT_catgr_seq = c3.catgr_seq
            ,   clint_tb cl
      WHERE    cl.clint_seq = clb.clint_seq
	  <if test="selectedTopCatgrNme!='대분류' and selectedTopCatgrNme neq '전체'">
	  AND c3.catgr_nme = '${selectedTopCatgrNme}' 
	  </if>
	  <if test="selectedMidCatgrNme!='중분류' and selectedMidCatgrNme neq '전체'">
	  AND c2.catgr_nme = '${selectedMidCatgrNme}' 
	  </if>
	  <if test="selectedBotCatgrNme!='소분류' and selectedBotCatgrNme neq '전체'">
	  AND c1.catgr_nme = '${selectedBotCatgrNme}'  
      </if>
      <if test="secondQunt  >=  firstQunt and secondQunt!=0">
      AND s.qunt between ${firstQunt} and ${secondQunt} 
      </if>
      <if test="clintSechText!=null">
      AND cl.clint_nme LIKE CONCAT ('%', #{clintSechText},'%')
      </if>
      <if test="prodctSeq!=0">
      AND p.prodct_Seq = #{prodctSeq}
      </if>
   </select>
   
   <!-- 
   * 상품들의 재고 정보를 수정하는 UPDATE
   *
   * 수정할 때는 들고온 값으로 '덮어씌우기'
   * 반품시에는 기존 재고에서 '빼기(-)'
   * 엑셀로 일괄 등록시에는 기존 재고에서 '더하기(+)'
   *
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->   
   <update id = "stckUpdate" parameterType="stckVo">
      <if test="stckType ==1">
      UPDATE stck_tb 
      SET qunt = #{qunt}
      WHERE prodct_seq = #{prodctSeq}; 
      </if>   
      <if test="stckType ==2">
      UPDATE stck_tb 
      SET qunt = qunt - #{qunt}
      WHERE prodct_seq = #{prodctSeq}; 
      </if>  
      <if test="stckType ==3">
      UPDATE stck_tb 
      SET qunt = qunt + #{qunt}
      WHERE prodct_seq = #{prodctSeq}; 
      </if>   
   </update>
   
   <!-- 
   * 특정 상품의 반품 정보를 INSERT 
   * 
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->
   <insert id = "retrnInsert" parameterType="stckVo">
      INSERT INTO retrn_tb(retrn_seq, prodct_seq, qunt, dat)
      VALUES((SELECT IFNULL(MAX(r.retrn_seq),0)+1 FROM retrn_tb r)
            , #{prodctSeq}
            , #{qunt}
            , (SELECT SYSDATE() FROM DUAL));
   </insert>

   <!-- 
   * 상품을 일괄 등록하는 과정에서 먼저 테이블에 상품의 정보가 있는지 없는지를 조회해줌 
   * 
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->
   <select id="stckRead" parameterType="stckVo" resultType="int">
       SELECT COUNT(*) prodctCount
       FROM stck_tb
       WHERE prodct_seq = #{prodctSeq};
   </select>
   
   <!-- 
   * 상품을 일괄 등록하는 과정에서 먼저 테이블에 상품의 정보가 있는지 없는지를 조회해줌 
   * 
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->
   <select id="stckInsert" parameterType="stckVo">
       INSERT INTO stck_tb(prodct_Seq, qunt)
       VALUES(#{prodctSeq},#{qunt});
   </select>
   
   <!-- 
   * 엑셀로 저장하기 위해 특정 상품들의 정보를 조회함
   * 
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->
   <select id="stckXlxList" parameterType="map" resultMap="stckValues">
      SELECT  p.prodct_seq
         ,   p.prodct_nme
         ,   p.purchs_pric
         ,   p.main_img
         ,   s.qunt
           ,   cl.clint_nme
           ,   cl.clint_mangr_num
      FROM   prodct_tb p
      JOIN   catgr_tb c 
      ON      p.catgr_seq = c.catgr_seq
      JOIN   stck_tb s
      ON      s.prodct_Seq = p.prodct_Seq
      JOIN   clint_bridg_tb clb
       ON      clb.prodct_seq = p.prodct_Seq
            ,   clint_tb cl
      WHERE    cl.clint_seq = clb.clint_seq
      AND(
      <foreach item="item" collection="prodctSeqArray"  separator="OR">
       p.prodct_Seq =  #{item}
      </foreach>
      );
   </select>
   
   <!-- 
   * 특정 상품의 입고 내역의 데이터 수를 SELECT COUNT
   * 
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->   
   <select id="instckRecrdCount" parameterType="stckVo" resultType="int">
       SELECT Count(p.prodct_nme) prodctCount
      FROM clint_tb cl
      JOIN clint_bridg_tb clb
      ON cl.clint_seq = clb.clint_seq
      JOIN instck_tb ins
      ON cl.clint_Seq = ins.clint_Seq
      , prodct_tb p
      , (SELECT @ROWNUM := 0) R
      WHERE p.prodct_seq = clb.prodct_seq
      AND   p.prodct_Seq = #{prodctSeq};
   </select>
   
   <!-- 
   * 특정 상품의 입고 내역 데이터를 SELECT
   * 
   * history :
   *        하원식, 1.0, 2016/08/11 – 초기 작성
   * author : 하원식
   * version : 1.0, 2016/08/11
   // -->      
   <select id="instckRecrdList" parameterType="stckVo" resultMap="stckValues">
       SELECT @ROWNUM := @ROWNUM + 1 AS prodct_Seq
      , p.prodct_nme
      , clint_nme
      , ins.qunt
      , ins.purchs_pric
      , ins.qunt*ins.purchs_pric totl_pric
      , ins.dat
      FROM clint_tb cl
      JOIN clint_bridg_tb clb
      ON cl.clint_seq = clb.clint_seq
      JOIN instck_tb ins
      ON cl.clint_Seq = ins.clint_Seq
      , prodct_tb p
      , (SELECT @ROWNUM := 0) R
      WHERE p.prodct_seq = clb.prodct_seq
      AND   p.prodct_Seq = #{prodctSeq}
      ORDER BY prodct_Seq DESC
      LIMIT #{recordCountPerPage} OFFSET #{firstRecordIndex};
   </select>
   
</mapper>